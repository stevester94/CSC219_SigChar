import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker


d = np.array(
 [[7961, 166, 467, 71, 2, 24, 0, 24, 0, 22, 8, 3, 0, 5, 0, 305, 3, 1, 279, 285, 21, 127, 949, 0], [714, 6619, 1036, 54, 4, 23, 0, 30, 0, 12, 5, 1, 0, 2, 0, 337, 1, 0, 422, 280, 17, 142, 908, 0], [577, 711, 7014, 60, 6, 19, 0, 24, 0, 17, 3, 2, 0, 2, 0, 298, 0, 0, 489, 295, 27, 141, 941, 0], [230, 4, 57, 7278, 10, 54, 3, 93, 4, 40, 136, 11, 2, 2, 4, 349, 4, 0, 60, 420, 80, 222, 1448, 49], [184, 0, 49, 58, 6478, 226, 58, 299, 28, 42, 297, 9, 2, 5, 0, 312, 9, 0, 56, 412, 33, 255, 1761, 50], [211, 2, 73, 55, 247, 5968, 98, 751, 35, 40, 304, 13, 2, 2, 0, 319, 4, 0, 49, 434, 34, 258, 1736, 53], [209, 1, 63, 65, 222, 433, 4975, 1363, 35, 43, 319, 10, 1, 2, 0, 340, 9, 1, 55, 412, 26, 252, 1674, 56], [234, 0, 44, 56, 210, 464, 834, 5501, 32, 53, 305, 8, 1, 1, 2, 317, 8, 0, 51, 465, 27, 285, 1838, 38], [206, 1, 51, 62, 147, 248, 16, 133, 6158, 46, 469, 8, 73, 69, 2, 377, 24, 0, 52, 417, 22, 253, 1630, 96], [242, 3, 36, 66, 38, 154, 2, 109, 40, 6309, 814, 117, 29, 83, 11, 348, 93, 0, 57, 430, 44, 232, 1557, 66], [203, 0, 60, 65, 87, 154, 8, 124, 160, 151, 5542, 422, 113, 313, 28, 664, 115, 0, 53, 415, 32, 254, 1561, 73], [169, 2, 49, 72, 51, 165, 2, 127, 65, 293, 1466, 4715, 74, 143, 32, 501, 257, 0, 57, 394, 36, 236, 1548, 64], [217, 0, 58, 51, 76, 158, 9, 118, 185, 80, 704, 44, 5598, 115, 51, 556, 252, 0, 52, 415, 22, 255, 1582, 83], [211, 0, 59, 46, 95, 166, 6, 130, 228, 116, 787, 127, 122, 4487, 57, 1259, 152, 0, 50, 415, 32, 241, 1590, 75], [212, 0, 51, 77, 62, 163, 5, 115, 89, 143, 798, 139, 119, 125, 2363, 1028, 2824, 0, 57, 413, 35, 222, 1492, 86], [238, 1, 50, 67, 79, 158, 3, 115, 119, 143, 841, 345, 145, 558, 442, 3470, 1385, 0, 56, 397, 32, 261, 1630, 86], [214, 2, 51, 55, 73, 110, 6, 108, 63, 140, 743, 158, 127, 109, 1272, 1020, 3932, 0, 54, 451, 39, 243, 1509, 78], [383, 16, 488, 46, 0, 19, 0, 28, 0, 14, 7, 1, 0, 4, 0, 304, 1, 1366, 6751, 261, 13, 125, 905, 0], [392, 8, 504, 45, 1, 30, 0, 31, 0, 20, 7, 3, 0, 5, 0, 319, 4, 397, 7648, 282, 18, 145, 938, 0], [183, 3, 40, 49, 7, 17, 0, 48, 1, 16, 4, 6, 0, 3, 0, 260, 0, 0, 44, 7993, 638, 265, 1024, 0], [167, 2, 41, 45, 3, 19, 0, 36, 0, 29, 8, 5, 0, 0, 0, 262, 0, 0, 45, 3148, 5623, 286, 1069, 0], [159, 0, 28, 25, 3, 33, 0, 34, 1, 24, 8, 2, 0, 2, 0, 313, 0, 0, 37, 588, 146, 8143, 1200, 0], [202, 2, 40, 45, 9, 100, 0, 112, 3, 40, 228, 5, 2, 2, 1, 332, 8, 0, 48, 430, 40, 237, 8721, 6], [211, 0, 53, 71, 60, 164, 50, 129, 60, 50, 374, 11, 9, 5, 2, 321, 12, 0, 54, 416, 30, 255, 1554, 6720]],
    dtype=np.int32)

all_modulation_targets = ['32PSK', '16APSK', '32QAM', 'FM', 'GMSK', '32APSK', 'OQPSK', '8ASK', 'BPSK', '8PSK', 'AM-SSB-SC', '4ASK',
                          '16PSK', '64APSK', '128QAM', '128APSK', 'AM-DSB-SC', 'AM-SSB-WC', '64QAM', 'QPSK', '256QAM', 'AM-DSB-WC', 'OOK', '16QAM']


def plot_confusion_matrix(confusion, labels):
   # Set up figure with colorbar
    fig = plt.figure()
    ax = fig.add_subplot(111)

    # cax = ax.matshow(d, cmap='bone')
    cax = ax.matshow(confusion, cmap='Purples')
    fig.colorbar(cax)

    # Set up axes
    ax.set_xticklabels([""] + labels, rotation=90)
    ax.set_yticklabels([""] + labels)

    # Show label at every tick
    ax.xaxis.set_major_locator(ticker.MultipleLocator(1))
    ax.yaxis.set_major_locator(ticker.MultipleLocator(1))

    # This is very hack-ish
    plt.gca().set_xticks([x - 0.5 for x in plt.gca().get_xticks()][1:], minor='true')
    plt.gca().set_yticks([y - 0.5 for y in plt.gca().get_yticks()][1:], minor='true')
    plt.grid(which='minor')

    # Set labels
    ax.set_xlabel("Predicted Modulation")
    ax.set_ylabel("Actual Modulation")

    # Accuracy subplot
    # Calc the correct cases
    correct = 0
    total = 0
    for i in range(0, len(confusion[0])):
        correct += confusion[i][i]
    total = np.sum(confusion)
    ax.text(0, 25, "Accuracy: %f" % (correct/total))

    plt.show()

plot_confusion_matrix(d, all_modulation_targets)

